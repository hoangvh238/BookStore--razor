@model IEnumerable<BookStore.Models.Product>

@{
    ViewData["Title"] = "Book Selling Cards";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/styles.css"> <!-- Adjust the path to your CSS file -->
    <!-- Ensure you have Bootstrap CSS included if using Bootstrap for other parts of your project -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        @if (Model == null || !Model.Any())
        {
            <div class="text-center">
                <h2>No products found! 😕</h2>
            </div>
        }
        else
        {
            <div class="row">
                @foreach (var product in Model)
                {
                    <div class="col-md-3 mb-4">
                        <div class="book-card">
                            <div class="book-cover">
                                <img src="@product.ProductImage" alt="@product.ProductName" class="book-image">
                                <div class="book-title">
                                    <h2>@product.ProductName</h2>
                                    <p>@product.Supplier?.CompanyName</p>
                                </div>
                            </div>
                            <div class="book-content">
                                <img src="@product.ProductImage" alt="@product.ProductName" class="book-image-content">
                                <div class="book-content-container">
                                    <span class="badge badge-primary">@product.Category?.CategoryName</span><br>
                                    <p class="book-description">
                                        $@product.UnitPrice<br>
                                    </p>
                                    @* Check if user is authenticated to show Add to Cart button *@
                                    @if (User.Identity.IsAuthenticated)
                                    {
                                        <button class="btn btn-primary add-to-cart" data-product-id="@product.ProductId" data-product-name="@product.ProductName" data-product-price="@product.UnitPrice">Add to Cart</button>
                                    }
                                    else
                                    {
                                        <a class="btn btn-primary" href="/Account/Login">Login to Add to Cart</a>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>

    <!-- Hidden input for RequestVerificationToken -->
    <input type="hidden" id="requestVerificationToken" value="@Html.AntiForgeryToken()">

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function() {
            $('.add-to-cart').click(function(e) {
                e.preventDefault();
                var productId = $(this).data('product-id');
                var productName = $(this).data('product-name');
                var unitPrice = $(this).data('product-price');

                addToCart(productId, productName, unitPrice);
            });

            function addToCart(productId, productName, unitPrice) {
                var requestVerificationToken = $('#requestVerificationToken').val();
                
                fetch(`/Shared/_Cart?handler=AddToCart&productId=${productId}&productName=${encodeURIComponent(productName)}&unitPrice=${unitPrice}`, {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': requestVerificationToken,
                        'Content-Type': 'application/json'
                    }
                })
                    .then(response => {console.log() })
                .then(data => {
                    // Update cart dropdown with new data
                    document.getElementById('cartItems').innerHTML = data;
                    alert('Added ' + productName + ' to cart!');
                })
                .catch(error => {
                    console.error('Error adding to cart:', error);
                });
            }
        });
    </script>
</body>
</html>
